@startuml

class Frontend {

}

class AuthController {
    -authService: AuthService
    +void login()
}

class ReisController {
    -reisService: ReisService
    +void addTripComponents()
    +void getFullTrip()
}

class BestellingController {
-reisService: ReisService
    +void getOrderOverview()
    +void payOrder()
}

class AuthService {
    +boolean authenticateUser(String authToken)
    +UserInfo getUserInfo(String authToken)
}

class ReisService {
    +List<Hotel> getHotels()
}

interface AuthAdapter {
    +boolean authenticateUser(String authToken)
    +TripTopGebruiker authenticateUser(String authToken)
}

class WireMockAdapter {
    +boolean authenticateUser(String authToken)
    +TripTopGebruiker authenticateUser(String authToken)
}

interface HotelAdapter {
    +List<Hotel> getHotels(String city, Date arrivalDate, Date departureDate, Double price)
}

class BookingApiAdapter {
    +List<Hotel> getHotels(String city, Date arrivalDate, Date departureDate, Double price)
}

class TripAdvisorApiAdapter {
    +List<Hotel> getHotels(String city, Date arrivalDate, Date departureDate, Double price)
}

class WireMock {

}

class BookingApi {

}

class TripAdvisorApi {

}

Frontend --> AuthController
AuthController --> AuthService
AuthAdapter <|.. WireMockAdapter
WireMockAdapter --> WireMock
Frontend --> ReisController
ReisController --> ReisService
HotelAdapter <|.. BookingApiAdapter
HotelAdapter <|.. TripAdvisorApiAdapter
BookingApiAdapter --> BookingApi
TripAdvisorApiAdapter --> TripAdvisorApi
Frontend --> BestellingController
BestellingController --> ReisService
AuthService --> AuthAdapter
ReisService --> HotelAdapter

@enduml